setup: 
  - name: synchronize system time
    cmd: sudo systemctl restart systemd-timesyncd.service
  - name: update apt
    cmd: sudo apt update
  - name: remove flash-kernel
    cmd: sudo apt remove -y flash-kernel && sudo apt -y autoremove
  - name: install java 11
    cmd: sudo apt install -y openjdk-11-jre-headless openjdk-11-jdk-headless -qq
  - name: install debconf-utils
    cmd: sudo apt install -y debconf-utils -qq
  - name: set DEBIAN_FRONTEND as "noninteractive"
    cmd: export DEBIAN_FRONTEND="noninteractive"
  - name: set mysql root password
    cmd: echo "mysql-server mysql-server/root_password password {MYSQL_PSSW}" | sudo debconf-set-selections
  - name: set mysql root password again
    cmd: echo "mysql-server mysql-server/root_password_again password {MYSQL_PSSW}" | sudo debconf-set-selections
  - name: install mysql 8
    cmd: sudo apt install -y mysql-server -qq
  - name: install maven
    cmd: sudo apt install -y maven -qq
  - name: install git
    cmd: sudo apt install -y git -qq
  - name: get dependencies for nodejs
    cmd: curl -fsSL https://deb.nodesource.com/setup_16.x | sudo bash -
  - name: stop apt-daily timer to look for updates
    cmd: sudo systemctl stop apt-daily.timer

jobs:
  - name: petclinic-build
    steps:
      - name: clone latest version of spring-petclinic
        cmd: git clone https://github.com/spring-projects/spring-petclinic.git
      - name: package the application
        cmd: cd spring-petclinic && mvn clean package -Dmaven.test.skip=true
      - name: move jar to shared volume
        cmd: cp ~/spring-petclinic/target/spring-petclinic-2.6.0-SNAPSHOT.jar ~/{VOLUME}/compressedFiles/spring-petclinic.jar
    cleanup:
      - name: remove spring-petclinic repo
        cmd: rm -rf spring-petclinic
  - name: petclinic-code-coverage
    steps:
      - name: clone latest version of spring-petclinic
        cmd: git clone https://github.com/spring-projects/spring-petclinic.git
      - name: generate code coverage
        cmd: cd spring-petclinic && mvn clean package test
      - name: move report to shared volume
        cmd: cp -R ~/spring-petclinic/target/site/jacoco/ ~/{VOLUME}/codeCoverage/petclinic-report
      - name: install dependencies - pup to parse html and store the code coverage percentage
        cmd: sudo apt install golang-go && go get github.com/ericchiang/pup && sudo cp go/bin/pup /usr/bin
      - name: parse index.html and store the code coverage in petclinic.cov
        cmd: cat ~/spring-petclinic/target/site/jacoco/index.html | pup 'tfoot tr td:nth-child(3) text{}' > ~/{VOLUME}/codeCoverage/petclinic.cov
    cleanup:
      - name: remove spring-petclinic repo and go installation
        cmd: rm -rf spring-petclinic go
  - name: deploy-petclinic
    covfile: ./codeCoverage/petclinic.cov
    zipfile: ./compressedFiles/spring-petclinic.jar
    mincov: 85
    port: 8081
    healthcheck: /
    steps:
      - name: move the project to the remote server
        scp:
          params:
            src: ./compressedFiles/spring-petclinic.jar
            dest: ~/spring-petclinic.jar
      - name: shutdown the server 
        cmd: pid=$(ps aux | grep '[s]erver.port=8081' | awk '{print $2}') && if [[ pid -ne '' ]];then kill $pid;fi
      - name: start the iTrust2 server 1
        cmd: nohup java -jar ~/spring-petclinic.jar --server.port=8081  &> petclinic-server.log &
    proxyport: 3091

